openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/v1/all/:
    get:
      operationId: listResponders
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/List'
          description: ''
      tags:
      - api
  /api/v1/detail/{id}:
    get:
      operationId: retrieveSurveyResponder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041E\u043F\u0440\u043E\
          \u0441 \u043A\u043E\u0442\u043E\u0440\u044B\u0439 \u043F\u0440\u043E\u0449\
          \u0435\u043B \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\
          \u043B\u044C."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detail'
          description: ''
      tags:
      - api
    put:
      operationId: updateSurveyResponder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041E\u043F\u0440\u043E\
          \u0441 \u043A\u043E\u0442\u043E\u0440\u044B\u0439 \u043F\u0440\u043E\u0449\
          \u0435\u043B \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\
          \u043B\u044C."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Detail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Detail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Detail'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detail'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSurveyResponder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041E\u043F\u0440\u043E\
          \u0441 \u043A\u043E\u0442\u043E\u0440\u044B\u0439 \u043F\u0440\u043E\u0449\
          \u0435\u043B \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\
          \u043B\u044C."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Detail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Detail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Detail'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detail'
          description: ''
      tags:
      - api
    delete:
      operationId: destroySurveyResponder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041E\u043F\u0440\u043E\
          \u0441 \u043A\u043E\u0442\u043E\u0440\u044B\u0439 \u043F\u0440\u043E\u0449\
          \u0435\u043B \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\
          \u043B\u044C."
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/users/{id}:
    get:
      operationId: retrieveResponder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Responder'
          description: ''
      tags:
      - api
  /api/v1/auth/users/:
    get:
      operationId: listUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
      tags:
      - api
  /api/v1/auth/users/me/:
    get:
      operationId: meUser
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: meUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: meUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: meUser
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/auth/users/{id}/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/create/:
    post:
      operationId: createSurveyResponder
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Detail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Detail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Detail'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detail'
          description: ''
      tags:
      - api
  /api/v1/question/:
    post:
      operationId: createQuestion
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Question'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
      tags:
      - api
  /api/v1/answerquestion/:
    post:
      operationId: createAnswerQuestion
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerQuestion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnswerQuestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnswerQuestion'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnswerQuestion'
          description: ''
      tags:
      - api
  /api/v1/survey/:
    post:
      operationId: createSurvey
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Survey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Survey'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ''
      tags:
      - api
  /api/v1/answer/:
    post:
      operationId: createAnswer
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Answer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Answer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Answer'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
      tags:
      - api
  /api/v1/user/:
    post:
      operationId: createResponder
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Responder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Responder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Responder'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Responder'
          description: ''
      tags:
      - api
  /api/v1/auth/users/activation/:
    post:
      operationId: activationUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
      tags:
      - api
  /api/v1/auth/users/resend_activation/:
    post:
      operationId: resendActivationUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/v1/auth/users/reset_password/:
    post:
      operationId: resetPasswordUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/v1/auth/users/reset_password_confirm/:
    post:
      operationId: resetPasswordConfirmUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
      tags:
      - api
  /api/v1/auth/users/reset_username/:
    post:
      operationId: resetUsernameUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/v1/auth/users/reset_username_confirm/:
    post:
      operationId: resetUsernameConfirmUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
      tags:
      - api
  /api/v1/auth/users/set_password/:
    post:
      operationId: setPasswordUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
      tags:
      - api
  /api/v1/auth/users/set_username/:
    post:
      operationId: setUsernameUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
      tags:
      - api
  /api/v1/auth_token/token/login/:
    post:
      operationId: createTokenCreate
      description: Use this endpoint to obtain user authentication token.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: ''
      tags:
      - api
  /api/v1/auth_token/token/logout/:
    post:
      operationId: createTokenDestroy
      description: Use this endpoint to logout user (remove user authentication token).
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
components:
  schemas:
    List:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ip:
          type: string
          maxLength: 50
        survey:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - ip
    Detail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        responder:
          type: integer
        survey:
          type: integer
        answers:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - responder
      - survey
    Responder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ip:
          type: string
          maxLength: 50
        survey:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - ip
    User:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
    Question:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        question_type:
          enum:
          - '1'
          - '2'
          - '3'
          type: string
        survey:
          type: integer
      required:
      - text
      - question_type
      - survey
    AnswerQuestion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        question:
          type: integer
      required:
      - text
      - question
    Survey:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        create_at:
          type: string
          format: date-time
        title:
          type: string
          maxLength: 200
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        description:
          type: string
      required:
      - create_at
      - title
      - description
    Answer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        responder:
          type: integer
        question:
          type: integer
      required:
      - text
      - responder
      - question
    UserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - username
      - password
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - uid
      - token
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - uid
      - token
      - new_password
    UsernameResetConfirm:
      type: object
      properties:
        new_username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
      required:
      - new_username
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - new_password
      - current_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
      required:
      - current_password
      - new_username
    TokenCreate:
      type: object
      properties:
        password:
          type: string
        username:
          type: string
